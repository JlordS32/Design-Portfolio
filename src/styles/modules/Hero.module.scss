@use "../scss/utility" as *;
@use 'sass:math';

section.hero {
   @include flex;
   flex-direction: column;
   margin-top: 4rem;
   gap: 4.45rem;
}

.title {
   width: 100%;
   max-width: 47rem;

   h1,
   p {
      @include text-center;
   }

   h1 {
      margin-bottom: 1.3rem;
   }

   p {
      padding: 0 4rem;
      color: var(--grey);
   }
}

.graphics {
   display: grid;
   width: 100%;
   height: 22rem;
   grid-template-columns: repeat(auto-fit, minmax(8rem, 1fr));
   grid-template-rows: repeat(2, 1fr);
   grid-auto-rows: 1fr;
   gap: 1.5rem;

   .gridWrapper {
      align-content: center;
   }

   .gridWrapper > div {
      @include flex(space-between, flex-end);
      border-radius: 0.5rem;
      width: 100%;
      height: 100%;
      color: var(--white);
      padding: 1.3rem;
      font-size: 1.34rem;
      font-weight: 500;
      line-height: 1.55rem;
      position: relative;
      transition: all 0.3s ease;

      img {
         position: absolute;
         align-self: flex-start;
         right: 1.3rem;
      }

      &:hover {
         transform: scale(1.05) rotate(-3deg);
         box-shadow: 0px 10px 15px -3px hsla(0, 0%, 0%, 0.178);
      }
   }

   $grid-span-values: (
      1: (
         2,
         2,
         var(--purple),
      ),
      2: (
         1,
         1,
         var(--light-orange),
      ),
      3: (
         1,
         1,
         var(--pink),
      ),
      4: (
         2,
         1,
         var(--blue-green),
      ),
      5: (
         2,
         1,
         var(--tomato),
      ),
      6: (
         2,
         1,
         var(--violet),
      ),
   );

   // Loop through the map and apply the grid spans dynamically
   @each $i, $span in $grid-span-values {
      .gridWrapper:nth-child(#{$i}) {
         grid-column: span nth($span, 1);
         grid-row: span nth($span, 2);

         > div {
            background-color: nth($span, 3);
         }
      }
   }
}

@media screen and (max-width: 900px) {
   section.hero {
      margin-top: 3.7rem;
      gap: 3.5rem;
   }
   
   .graphics {
      height: calc(22rem * 1.3);
   }
}
@media screen and (max-width: 800px) {
   .graphics {
      grid-template-columns: repeat(auto-fit, minmax(6rem, 1fr));
   }
}
@media screen and (max-width: 768px) {
   .title {
      p {
         padding: 0;
      }
   }
}
